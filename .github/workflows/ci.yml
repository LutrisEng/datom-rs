# SPDX-FileCopyrightText: 2021 Lutris Engineering, Inc
# SPDX-License-Identifier: BlueOak-1.0.0 OR BSD-2-Clause-Patent
# SPDX-FileContributor: Piper McCorkle <piper@lutris.engineering>

name: CI

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all

  fmt:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: --all
          name: Clippy

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ github.token }}

  reuse:
    name: REUSE
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install reuse
      - run: reuse lint

  validate_citation:
    name: Validate CITATION.cff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: LutrisEng/validate-cff@v1.0.0

  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all
      - run: cp -R website/* target/doc/
      - uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ github.token }}
          publish_dir: ./target/doc
          force_orphan: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: Auto-generated documentation

  coverage:
    name: Test with coverage
    runs-on: ubuntu-latest
    needs:
      - check
      - fmt
      - reuse
      - validate_citation
      - docs
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v1
        with:
          key: coverage
      - uses: actions-rs/install@v0.1
        with:
          crate: rustfilt
          version: latest
      - run: ./scripts/test_coverage.sh
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ github.token }}
          path-to-lcov: datom.lcov

  test:
    name: Test on ${{ matrix.os }} with Rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    needs:
      - coverage
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          # Ensure nightly doesn't break anything
          - nightly
          # Ensure nothing breaks in the next Rust release
          - beta
          # Ensure nothing breaks in the current Rust release
          - stable
          # Ensure the MSRV doesn't break
          - "1.60"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: "datom-node/package-lock.json"
      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"
          cache: "gradle"
      - uses: Swatinem/rust-cache@v1
      - run: cargo test --all --verbose -- --nocapture
